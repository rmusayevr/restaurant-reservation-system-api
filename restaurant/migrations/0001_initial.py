# Generated by Django 4.1.6 on 2023-04-19 18:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import restaurant.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('phone_number', models.CharField(max_length=30, verbose_name='phone number')),
                ('additions', models.TextField(verbose_name='your additions')),
                ('restaurant_name', models.CharField(blank=True, max_length=100, verbose_name='restaurant name')),
                ('location', models.TextField(blank=True, verbose_name='location')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=True, verbose_name='staff')),
                ('is_client', models.BooleanField(default=False, verbose_name='client')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', restaurant.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='restaurant_images')),
            ],
            options={
                'verbose_name': 'Restaurant Image',
                'verbose_name_plural': 'Restaurant Images',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('location', models.TextField()),
                ('table_count', models.PositiveIntegerField(blank=True, null=True)),
                ('rate', models.IntegerField(blank=True, choices=[(5, '100'), (4, '80'), (1, '20'), (2, '40'), (3, '60')], null=True)),
                ('people_count', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('googleMapLink', models.URLField()),
                ('is_verified', models.BooleanField(default=False)),
                ('phone', models.CharField(max_length=20)),
                ('restaurantHours', models.BooleanField(default=True)),
                ('subscription', models.CharField(blank=True, max_length=30, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_category', to='restaurant.category')),
                ('images', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_images', to='restaurant.image')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_restaurant', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Restaurant',
                'verbose_name_plural': 'Restaurants',
            },
        ),
        migrations.CreateModel(
            name='WorkingTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=10)),
                ('open_at', models.CharField(max_length=10)),
                ('close_at', models.CharField(max_length=10)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_working_times', to='restaurant.restaurant')),
            ],
            options={
                'verbose_name': 'Working Time',
                'verbose_name_plural': 'Working Times',
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=20)),
                ('count', models.PositiveIntegerField()),
                ('xcod', models.IntegerField()),
                ('ycod', models.IntegerField()),
                ('size', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('rotate', models.IntegerField(blank=True, null=True)),
                ('restaurant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_table', to='restaurant.restaurant')),
            ],
            options={
                'verbose_name': 'Table',
                'verbose_name_plural': 'Tables',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='last name')),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='phone number')),
                ('date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('restaurant_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reserved_restaurant', to='restaurant.restaurant')),
                ('table_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserved_table', to='restaurant.table')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_reservation', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reservation',
                'verbose_name_plural': 'Reservations',
            },
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wall', models.FileField(blank=True, null=True, upload_to='Wall Images')),
                ('restaurant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_map', to='restaurant.restaurant')),
                ('table', models.ManyToManyField(related_name='tables_in_map', to='restaurant.table')),
            ],
            options={
                'verbose_name': 'Map',
                'verbose_name_plural': 'Maps',
            },
        ),
    ]
